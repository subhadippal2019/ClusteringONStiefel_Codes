load("~/Dropbox/Juhee_CRAN/DREAM/BB/Tumor2_BayClone2_input.txt")
read.table("~/Dropbox/Juhee_CRAN/DREAM/BB/Tumor2_BayClone2_input.txt")
A=read.table("~/Dropbox/Juhee_CRAN/DREAM/BB/Tumor2_BayClone2_input.txt")
A[:,1]
A[:1]
A=as.matrix(read.table("~/Dropbox/Juhee_CRAN/DREAM/BB/Tumor2_BayClone2_input.txt"))
A[,2]
A[,4]
A[,2]
A
A[,3]
N_tot=A[,1]
n_alt=A[,2]
VAF=n_alt/N_tot
scatter(N_tot,VAF)
plot(N_tot,VAF)
install.packages(ggplo2)
install.packages(ggplot2)
install.packages("ggplot2")
p <- ggplot(mtcars, aes(factor(cyl), mpg))
p <- ggplot2(mtcars, aes(factor(cyl), mpg))
install.packages("ggplot")
ggplot2
install.packages("ggplot2")
ggplot2
install.packages("ggplot2")
ggplot2
install.packages("ggplot2")
ggplot2
install.packages("ggplot2")
library(ggplot2)
p <- ggplot(mtcars, aes(factor(cyl), mpg))
p + geom_violin()
A=as.matrix(read.table("~/Dropbox/Juhee_CRAN/DREAM/BB/Tumor2_BayClone2_input.txt"));
N_tot=A[,1]
n_alt=A[,2]
VAF=n_alt/N_tot
scatterplot
plot(N_tot,VAF)
p=ggplot(N_tot,VAF)
p=ggplot(aes(N_tot,VAF))
hist(VAF)
employee <- c('John Doe','Peter Gynn','Jolie Hope')
> salary <- c(21000, 23400, 26800)
> startdate <- as.Date(c('2010-11-1','2008-3-25','2007-3-14'))
employee <- c('John Doe','Peter Gynn','Jolie Hope')
salary <- c(21000, 23400, 26800)
startdate <- as.Date(c('2010-11-1','2008-3-25','2007-3-14'))
employ.data <- data.frame(employee, salary, startdate)
employ.data
which(VAF > 0.5)
VAF>0.5
as.numeric(VAF>0.5)
idx=as.numeric(VAF>0.5)
data1=data.frame(VAF,idx)
data1
p1=ggplot(data1,aes(x=idx,y=VAF))
p1+geom_violin()
p1=ggplot(data1,aes(x=factor(idx),y=VAF))
p1+geom_violin()
p1+geom_violin(aes(fill = factor(idx)))
p1+eom_jitter(height = 0)
p1+geom_jitter(height = 0)
p1+geom_violin(aes(fill = factor(idx)))+geom_jitter(height = 0)
d=read.table("~/Dropbox/Juhee_CRAN/DREAM/BB/Tumor2_BayClone2_input.txt")
d[,1]
d[,2]
d[,3]
N_tot = d[,1];
N_alt = d[,2];
CN = d[,3];
VAF=N_alt/N_tot;
data1=data.frame(N_tot,CN)
data1
data2=data.frame(VAF,CN)
p1 = ggplot(data1,aes(x=CN,y=N_tot))
library(ggplot2)
p1 = ggplot(data1,aes(x=CN,y=N_tot))
p1 = ggplot(data1,aes(x=CN,y=N_tot))+geom_violin()
pdf("~/Desktop/test1.pdf")
p1 = ggplot(data1,aes(x=CN,y=N_tot))+geom_violin()
dev.off()
data1[1:10]
data1$N_tot(1:10)
data1$N_tot[1:10,]
data1$N_tot[1:10]
data1$CN[1:10]
p1 = ggplot(data1,aes(x=CN,y=N_tot))
p1
p1+geom_bar()
p1+geom_point()
p1+geom_violin()
p1 = ggplot(data1,aes(x=CN,y=N_tot))+geom_violin()
y
N_tot
CN
factor(CN)
p1 = ggplot(data1,aes(x=factor(CN),y=N_tot))+geom_violin()
p1 = ggplot(data1,aes(x=factor(CN),y=N_tot))+geom_violin()
p1=
NA
p1 = ggplot(data1,aes(x=factor(CN),y=N_tot))+geom_violin()
p1 = ggplot(data1,aes(x=factor(CN),y=N_tot))+geom_count()
pdf("~/Desktop/test1.pdf")
p1 = ggplot(data1,aes(x=factor(CN),y=N_tot))+geom_count()
dev.off()
p1 = ggplot(data1,aes(x=factor(CN),y=N_tot))+geom_point()
d=read.table("~/Dropbox/Juhee_CRAN/DREAM/BB/Tumor2_BayClone2_input.txt")
N_tot = d[,1];
N_alt = d[,2];
CN = d[,3];
data1=data.frame(N_tot,CN)
VAF=N_alt/N_tot;
d=read.table("~/Dropbox/Juhee_CRAN/DREAM/BB/Tumor2_BayClone2_input.txt")
N_tot = d[,1];
N_alt = d[,2];
CN = d[,3];
VAF=N_alt/N_tot;
data1=data.frame(N_tot,CN)
data2=data.frame(VAF,CN)
library(ggplot2)
p1 = ggplot(data1,aes(x=factor(CN),y=N_tot))+geom_violin()
d=read.table("~/Dropbox/Juhee_CRAN/DREAM/BB/Tumor2_BayClone2_input.txt")
N_tot = d[,1];
N_alt = d[,2];
CN = d[,3];
VAF=N_alt/N_tot;
data1=data.frame(N_tot,CN)
data2=data.frame(VAF,CN)
library(ggplot2)
p1 = ggplot(data1,aes(x=factor(CN),y=N_tot))+geom_violin()
d=read.table("~/Dropbox/Juhee_CRAN/DREAM/BB/Tumor2_BayClone2_input.txt")
N_tot = d[,1];
N_alt = d[,2];
CN = d[,3];
VAF=N_alt/N_tot;
data1=data.frame(N_tot,CN)
data2=data.frame(VAF,CN)
library(ggplot2)
p1 = ggplot(data1,aes(x=factor(CN),y=N_tot))+geom_point()
d=read.table("~/Dropbox/Juhee_CRAN/DREAM/BB/Tumor2_BayClone2_input.txt")
N_tot = d[,1];
N_alt = d[,2];
CN = d[,3];
VAF=N_alt/N_tot;
data1=data.frame(N_tot,CN)
data2=data.frame(VAF,CN)
library(ggplot2)
p1 = ggplot(data1,aes(x=CN,y=N_tot))+geom_point()
d=read.table("~/Dropbox/Juhee_CRAN/DREAM/BB/Tumor2_BayClone2_input.txt")
N_tot = d[,1];
N_alt = d[,2];
CN = d[,3];
VAF=N_alt/N_tot;
data1=data.frame(N_tot,CN)
data2=data.frame(VAF,CN)
library(ggplot2)
p1 = ggplot(data1,aes(x=CN,y=N_tot))+geom_point()
d=read.table("~/Dropbox/Juhee_CRAN/DREAM/BB/Tumor2_BayClone2_input.txt")
N_tot = d[,1];
N_alt = d[,2];
CN = d[,3];
VAF=N_alt/N_tot;
data1=data.frame(N_tot,CN)
data2=data.frame(VAF,CN)
library(ggplot2)
p1 = ggplot(data1,aes(x=CN,y=N_tot))
p1+geom_rug()
p1+geom_point()
p1+geom_violin()
p1+geom_violin()
p1
p1+geom_violin()
p1 = ggplot(data1,aes(x=factor(CN),y=N_tot))
p1
p1+geom_violin()
p1+geom_violin(fill(aes(factor(CN))))
p1+geom_violin(aes(fill=factor(CN))))
p1+geom_violin(aes(fill=factor(CN)))
p1+geom_violin(aes(fill=factor(CN)))+geom_boxplot()
p1+geom_violin(aes(fill=factor(CN)))+geom_boxplot(width=0.1)
p1+geom_violin(aes(fill=factor(CN)))+geom_boxplot(width=0.15)
p1+geom_violin(aes(fill=factor(CN)))+geom_boxplot(width=0.15)+geom_jitter()
p1+geom_violin(aes(fill=factor(CN)))+geom_boxplot(width=0.15)
d=read.table("~/Dropbox/Juhee_CRAN/DREAM/BB/Tumor2_BayClone2_input.txt")
N_tot = d[,1];
N_alt = d[,2];
CN = d[,3];
VAF=N_alt/N_tot;
data1=data.frame(N_tot,CN)
data2=data.frame(VAF,CN)
library(ggplot2)
p1 = ggplot(data1,aes(x = factor(CN),y = N_tot))
p1+geom_violin(aes(fill=factor(CN)))+geom_boxplot(width=0.2)
getwd()
setwd("~/Dropbox/ClusteringDTIonstiefel/DensitySVD_sep1_16/C_code/")
source("../density1.r")
out=density1(y=(1:1000)/1000,D=c(3,4),S=c(4,5),1,10,1)
plot(exp(out-max(out)))
out=density1(y=(1:1000)/1000,D=c(0.7,5.4),S=c(4,5),1,10,1)
out=density1(y=(1:4000)/4000,D=c(0.7,5.4),S=c(4,5),1,10,1)
out=density1(y=(1:4000)/2000,D=c(0.7,5.4),S=c(4,5),1,10,1)
plot(exp(out-max(out)))
out=density1(y=(1:4000)/4000,D=c(0.7,5.4),S=c(14,15),1,10,1)
plot(exp(out-max(out)))
out=density1(y=(1:4000)/4000,D=c(0.7,5.4),S=c(14,15),1,100,1)
out=density1(y=(1:4000)/4000,D=c(0.7,5.4),S=c(14,15),1,1000,1)
plot(exp(out-max(out)))
out
out-max(out)
out=density1(y=(1:4000)/4000,D=c(0.7,5.4),S=c(140,150),1,1000,1)
plot(exp(out-max(out)))
install.packages(rstiefel)
install.packages("rstiefel")
(as.matrix(c(1,2,3,4,5,6),nrows=3,ncols=2))
(as.matrix(c(1,2,3,4,5,6),nrow=3,ncol=2))
(as.matrix(c(1,2,3,4,5,6),ncols=2))
(matrix(c(1,2,3,4,5,6),ncols=2))
(matrix(c(1,2,3,4,5,6),nrows=3))
(matrix(c(1,2,3,4,5,6),nrow=3))
(matrix(c(1,2,3,4,5,6),ncol = 2))
rmf.matrix(matrix(c(1,2,3,4,5,6),ncol = 2))
library(rstiefel)
rmf.matrix(matrix(c(1,2,3,4,5,6),ncol = 2))
svd(matrix(c(1,2,3,4,5,6),ncol=2))
F = (matrix(c(1,2,3,4,5,6),ncol = 2))
out = svd(F)
[D I1] = sort(out$d)
M = out$u[,I1]
V = out$v[,I1]
?sort()
F = (matrix(c(1,2,3,4,5,6),ncol = 2))
out = svd(F)
rank(out$d)
out$d
F = (matrix(c(1,2,3,4,5,6),ncol = 2))
out = svd(F)
D = out$d
M = out$u
V = out$v
D
U
M
V
library(rstiefel)
N = 100
F = (matrix(c(1,2,3,4,5,6),ncol = 2))
G = (matrix(c(2,3,4,5,6,7),ncol = 2))
out = svd(F)
D = out$d
M = out$u
V = out$v
R = maxtrix(c(0,0,0,0,0,0),ncol=2)
for (i in 1:N)
{
R = R + rmf.matrix(G,ncol = 2)
}
S = t(M)%*%R%*%V
library(rstiefel)
N = 100
F = (matrix(c(1,2,3,4,5,6),ncol = 2))
G = (matrix(c(2,3,4,5,6,7),ncol = 2))
out = svd(F)
D = out$d
M = out$u
V = out$v
R = matrix(c(0,0,0,0,0,0),ncol=2)
for (i in 1:N)
{
R = R + rmf.matrix(G,ncol = 2)
}
S = t(M)%*%R%*%V
library(rstiefel)
N = 100
F = (matrix(c(1,2,3,4,5,6),ncol = 2))
G = (matrix(c(2,3,4,5,6,7),ncol = 2))
out = svd(F)
D = out$d
M = out$u
V = out$v
R = matrix(c(0,0,0,0,0,0),ncol=2)
for (i in 1:N)
{
R = R + rmf.matrix(G)
}
S = t(M)%*%R%*%V
S
diag(S)
out=density1(y=(1:4000)/2000,D,diag(S),1,N,1)
plot(exp(out-max(out)))
(1:4000)/1000
(1:4000)/2000
out=density1(y=(1:4000)/1000,D,diag(S),1,N,1)
plot(exp(out-max(out)))
out=density1(y=(1:800)/800,D,diag(S),1,N,1)
plot(exp(out-max(out)))
out=density1(y=(1:800)/100,D,diag(S),1,N,1)
plot(exp(out-max(out)))
out=density1(y=(1:2000)/100,D,diag(S),1,N,1)
plot(exp(out-max(out)))
library(rstiefel)
N = 1000
F = (matrix(c(1,2,3,4,5,6),ncol = 2))
G = (matrix(c(2,3,4,5,6,7),ncol = 2))
out = svd(F)
D = out$d
M = out$u
V = out$v
R = matrix(c(0,0,0,0,0,0),ncol=2)
for (i in 1:N)
{
R = R + rmf.matrix(G)
}
S = t(M)%*%R%*%V
out=density1(y=(1:2000)/100,D,diag(S),1,N,1)
plot(exp(out-max(out)))
library(rstiefel)
N = 200
F = (matrix(c(1,2,3,4,5,6),ncol = 2))
G = (matrix(c(2,3,4,5,6,7),ncol = 2))
out = svd(F)
D = out$d
M = out$u
V = out$v
R = matrix(c(0,0,0,0,0,0),ncol=2)
for (i in 1:N)
{
R = R + rmf.matrix(G)
}
S = t(M)%*%R%*%V
out=density1(y=(1:2000)/100,D,diag(S),1,N,1)
plot(exp(out-max(out)))
rmf.matrix(G)
library(rstiefel)
rmf.matrix(G)
